
6-courceの保存処理

◆ルートの編集◆

ディレクトリ
\routes\web.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

///// Instructor Group SideBar
Route::middleware(['auth', 'roles:instructor'])->group(function () {

  // Instructor All Route 
  Route::controller(CourseController::class)->group(function () {

    Route::post('/store/course', 'StoreCourse')
      ->name('store.course');


/////////////////////////////////////////////////////////////////////////////////////////////////

◆ビューの編集(遷移元)◆

ディレクトリ
\resources\views\instructor\courses\add_course.blade.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  <form id="myForm" action="{{ route('store.course') }}" method="post" class="row g-3" enctype="multipart/form-data">
    @csrf

/////////////////////////////////////////////////////////////////////////////////////////////////

◆コントローラーの編集◆

ディレクトリ
\app\Http\Controllers\Backend\CourseController.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  public function StoreCourse(Request $request)
  {

    $request->validate([
      'video' => 'required|mimes:mp4|max:10000',
    ]);

    $image = $request->file('course_image');
    $name_gen = hexdec(uniqid()) . '.' . $image->getClientOriginalExtension();
    InterventionImage::make($image)->resize(370, 246)->save('storage/upload/course/thambnail/' . $name_gen);
    $save_url = 'storage/upload/course/thambnail/' . $name_gen;

    $video = $request->file('video');
    $videoName = time() . '.' . $video->getClientOriginalExtension();
    $video->move(public_path('storage/upload/course/video/'), $videoName);
    $save_video = 'storage/upload/course/video/' . $videoName;

    // 他のテーブルのIDも取得するため、
    // insertGetIdメソッドを用いる
    $course_id = Course::insertGetId([

      'category_id' => $request->category_id,
      'subcategory_id' => $request->subcategory_id,
      'instructor_id' => Auth::user()->id,
      'course_title' => $request->course_title,
      'course_name' => $request->course_name,
      'course_name_slug' => strtolower(str_replace(' ', '-', $request->course_name)),
      'description' => $request->description,
      'video' => $save_video,

      'label' => $request->label,
      'duration' => $request->duration,
      'resources' => $request->resources,
      'certificate' => $request->certificate,
      'selling_price' => $request->selling_price,
      'discount_price' => $request->discount_price,
      'prerequisites' => $request->prerequisites,

      'bestseller' => $request->bestseller,
      'featured' => $request->featured,
      'highestrated' => $request->highestrated,
      'status' => 1,
      'course_image' => $save_url,
      'created_at' => Carbon::now(),

    ]);

    /// Course Goals Add Form 

    $goles = Count($request->course_goals);
    if ($goles != NULL) {
      for ($i = 0; $i < $goles; $i++) {
        $gcount = new Course_goal();
        $gcount->course_id = $course_id;
        $gcount->goal_name = $request->course_goals[$i];
        $gcount->save();
      }
    }
    /// End Course Goals Add Form 

    $notification = array(
      'message' => 'Course Inserted Successfully',
      'alert-type' => 'success'
    );
    return redirect()->route('all.course')->with($notification);
  } // End Method 

/////////////////////////////////////////////////////////////////////////////////////////////////

保存処理が行えたらOK