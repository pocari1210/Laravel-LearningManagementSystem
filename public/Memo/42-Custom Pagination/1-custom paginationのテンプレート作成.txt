
1-custom paginationのテンプレート作成

下記コマンドを実行し、Paginationフォルダ作成
php artisan vendor:publish --tag=laravel-pagination


◆ビューの編集(遷移元)◆

ディレクトリ
\resources\views\frontend\blog\blog_list.blade.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

{{ $blog->links('vendor.pagination.custom') }}

/////////////////////////////////////////////////////////////////////////////////////////////////

◆Custom pagination編集◆

ディレクトリ
\resources\views\vendor\pagination\custom.blade.php

※新規でファイルを作成する必要あり

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

<ul class="pagination justify-content-center">
  <li class="page-item">
    <a class="page-link" href="#" aria-label="Previous">
      <span aria-hidden="true"><i class="la la-arrow-left"></i></span>
      <span class="sr-only">Previous</span>
    </a>
  </li>
  <li class="page-item active"><a class="page-link" href="#">1</a></li>
  <li class="page-item"><a class="page-link" href="#">2</a></li>
  <li class="page-item"><a class="page-link" href="#">3</a></li>
  <li class="page-item">
    <a class="page-link" href="#" aria-label="Next">
      <span aria-hidden="true"><i class="la la-arrow-right"></i></span>
      <span class="sr-only">Next</span>
    </a>
  </li>
</ul>

/////////////////////////////////////////////////////////////////////////////////////////////////

◆コントローラーの編集◆

ディレクトリ
\app\Http\Controllers\Backend\BlogController.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

public function BlogList(){

    // 変更前
    $blog = BlogPost::latest()->get();

    // 変更後
    $blog = BlogPost::latest()->paginate(2);

★コード解説★
投稿されたBlogを2件ごとに表示している


/////////////////////////////////////////////////////////////////////////////////////////////////

Blogのページに2件表示されていたらOK