
3-決済処理

◆ルートの編集◆

ディレクトリ
\routes\web.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

Route::post('/payment', [CartController::class, 'Payment'])
  ->name('payment');


/////////////////////////////////////////////////////////////////////////////////////////////////

◆ビューの編集(遷移元)◆

ディレクトリ
\resources\views\frontend\checkout\checkout_view.blade.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  <form method="post" class="row" action="{{ route('payment') }}" enctype="multipart/form-data">
    @csrf

/////////////////////////////////////////////////////////////////////////////////////////////////

◆コントローラーの編集◆

ディレクトリ
\app\Http\Controllers\Frontend\CartController.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  public function Payment(Request $request)
  {

    // couponの処理
    if (Session::has('coupon')) {
      $total_amount = Session::get('coupon')['total_amount'];
    } else {
      $total_amount = round(Cart::total());
    }

    // Cerate a new Payment Record 

    // 入力フォームのデータの取得
    $data = new Payment();
    $data->name = $request->name;
    $data->email = $request->email;
    $data->phone = $request->phone;
    $data->address = $request->address;
    $data->cash_delivery = $request->cash_delivery;
    $data->total_amount = $total_amount;
    $data->payment_type = 'Direct Payment';

    $data->invoice_no = 'EOS' . mt_rand(10000000, 99999999);
    $data->order_date = Carbon::now()->format('d F Y');
    $data->order_month = Carbon::now()->format('F');
    $data->order_year = Carbon::now()->format('Y');
    $data->status = 'pending';
    $data->created_at = Carbon::now();
    $data->save();
  } // End Method 

/////////////////////////////////////////////////////////////////////////////////////////////////

決済ボタンを押し、データベースに登録されていたらOK